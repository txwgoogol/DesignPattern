package top.txwgoogol.designpattern.interpreter;

/**
 * 解释器模式
 * 使用场景：
 * 1. 如果某个简单的语言需要解释执行而且可以将语言中的语句表示为一个抽象语法树可以考虑使用解释器模式。
 * 2. 在某些特定领域出现重复的问题时，可以将该领域的问题转化为一种语法规则下的语句，然后构建解释器来解释该语句。
 * 优点：灵活的拓展性
 * 缺点：每条文法对应至少一个解释器，生成大量的类，后期维护困难。
 * 复杂的文法不推荐使用
 *
 * @author txwgoogol
 * @date 2017/11/8.
 */
public class Interpreter {
}
